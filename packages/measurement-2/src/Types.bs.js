// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Result$Rationale = require("rationale/src/Result.js");

function verifyHasLength(param) {
  var ys = param[/* ys */1];
  var xs = param[/* xs */0];
  var match = xs.length !== ys.length;
  if (match) {
    return /* Error */Block.__(1, ["Arrays must have more than 0 elements."]);
  } else {
    return /* Ok */Block.__(0, [/* record */[
                /* xs */xs,
                /* ys */ys
              ]]);
  }
}

function verifySameLength(param) {
  var ys = param[/* ys */1];
  var xs = param[/* xs */0];
  var match = xs.length === 0 || ys.length === 0;
  if (match) {
    return /* Error */Block.__(1, ["Array length must be the same."]);
  } else {
    return /* Ok */Block.__(0, [/* record */[
                /* xs */xs,
                /* ys */ys
              ]]);
  }
}

function make(param) {
  var __x = verifyHasLength(/* record */[
        /* xs */param[/* xs */0],
        /* ys */param[/* ys */1]
      ]);
  return Curry._2(Result$Rationale.bind, __x, verifySameLength);
}

var Cdf = /* module */[
  /* verifyHasLength */verifyHasLength,
  /* verifySameLength */verifySameLength,
  /* make */make
];

function inverse(t) {
  return 1 - t;
}

function verifyInRange(f) {
  if (f < 0 || f > 1) {
    return /* Error */Block.__(1, ["Percentage must be between 0 and 1."]);
  } else {
    return /* Ok */Block.__(0, [f]);
  }
}

var make$1 = verifyInRange;

var Percentage = /* module */[
  /* inverse */inverse,
  /* verifyInRange */verifyInRange,
  /* make */make$1
];

var Measurement = /* module */[];

exports.Cdf = Cdf;
exports.Percentage = Percentage;
exports.Measurement = Measurement;
/* Result-Rationale Not a pure module */
