// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Js_exn = require("bs-platform/lib/js/js_exn.js");
var Belt_Array = require("bs-platform/lib/js/belt_Array.js");
var Option$Rationale = require("rationale/src/Option.js");
var Result$Rationale = require("rationale/src/Result.js");

function toString(e) {
  if (e >= 606665514) {
    if (e >= 879009456) {
      return "OTHER";
    } else {
      return "FALSE_CONDITIONAL";
    }
  } else if (e >= -8423941) {
    return "RESULT_NOT_AVAILABLE";
  } else {
    return "AMBIGUOUS";
  }
}

var UnresolvableResolution = /* module */[/* toString */toString];

function fromString(e) {
  switch (e) {
    case "GENERIC" : 
        return /* GENERIC */909067767;
    case "QUESTION_FEEDBACK" : 
        return /* QUESTION_FEEDBACK */-527079426;
    case "UPDATE" : 
        return /* UPDATE */965227017;
    default:
      return Js_exn.raiseError("Invalid GraphQL Comment: " + e);
  }
}

function toPublicString(e) {
  if (e !== 909067767) {
    if (e >= 965227017) {
      return "Update";
    } else {
      return "Question Feedback";
    }
  } else {
    return "Generic";
  }
}

var $$Comment = /* module */[
  /* fromString */fromString,
  /* toPublicString */toPublicString
];

function verifyHasLength(param) {
  var ys = param[/* ys */1];
  var xs = param[/* xs */0];
  var match = xs.length !== ys.length;
  if (match) {
    return /* Error */Block.__(1, ["Arrays must have more than 0 elements."]);
  } else {
    return /* Ok */Block.__(0, [/* record */[
                /* xs */xs,
                /* ys */ys
              ]]);
  }
}

function verifySameLength(param) {
  var ys = param[/* ys */1];
  var xs = param[/* xs */0];
  var match = xs.length === 0 || ys.length === 0;
  if (match) {
    return /* Error */Block.__(1, ["Array length must be the same."]);
  } else {
    return /* Ok */Block.__(0, [/* record */[
                /* xs */xs,
                /* ys */ys
              ]]);
  }
}

function make(param) {
  var __x = verifyHasLength(/* record */[
        /* xs */param[/* xs */0],
        /* ys */param[/* ys */1]
      ]);
  return Curry._2(Result$Rationale.bind, __x, verifySameLength);
}

var Cdf = /* module */[
  /* verifyHasLength */verifyHasLength,
  /* verifySameLength */verifySameLength,
  /* make */make
];

function inverse(t) {
  return 1 - t;
}

function verifyInRange(f) {
  if (f < 0 || f > 1) {
    return /* Error */Block.__(1, ["Percentage must be between 0 and 1."]);
  } else {
    return /* Ok */Block.__(0, [f]);
  }
}

var make$1 = verifyInRange;

var Percentage = /* module */[
  /* inverse */inverse,
  /* verifyInRange */verifyInRange,
  /* make */make$1
];

function isX(toXFn, t) {
  return Option$Rationale.isSome(Curry._1(toXFn, t));
}

function toCdf(t) {
  if (typeof t === "number" || t[0] !== 3354245) {
    return undefined;
  } else {
    return t[1];
  }
}

function toFloat(t) {
  if (typeof t === "number" || t[0] !== 365180284) {
    return undefined;
  } else {
    return t[1];
  }
}

function toBinary(t) {
  if (typeof t === "number" || t[0] !== 564146209) {
    return undefined;
  } else {
    return t[1];
  }
}

function toPercentage(t) {
  if (typeof t === "number" || t[0] !== -488794310) {
    return undefined;
  } else {
    return t[1];
  }
}

function toUnresolvableResolution(t) {
  if (typeof t === "number" || t[0] !== -882782856) {
    return undefined;
  } else {
    return t[1];
  }
}

function toComment(t) {
  if (typeof t === "number" || t[0] !== -826170817) {
    return undefined;
  } else {
    return t[1];
  }
}

function isCdf(param) {
  return Option$Rationale.isSome(toCdf(param));
}

function isFloat(param) {
  return Option$Rationale.isSome(toFloat(param));
}

function isBinary(param) {
  return Option$Rationale.isSome(toBinary(param));
}

function isPercentage(param) {
  return Option$Rationale.isSome(toPercentage(param));
}

function isComment(param) {
  return Option$Rationale.isSome(toComment(param));
}

function toTypeName(t) {
  var variant = t[0];
  if (variant >= -488794310) {
    if (variant >= 365180284) {
      if (variant >= 564146209) {
        return /* Binary */2;
      } else {
        return /* Float */1;
      }
    } else if (variant >= 3354245) {
      return /* Cdf */0;
    } else {
      return /* Percentage */3;
    }
  } else if (variant >= -826170817) {
    return /* Comment */5;
  } else {
    return /* UnresolvableResolution */4;
  }
}

var Measurement = /* module */[
  /* isX */isX,
  /* toCdf */toCdf,
  /* toFloat */toFloat,
  /* toBinary */toBinary,
  /* toPercentage */toPercentage,
  /* toUnresolvableResolution */toUnresolvableResolution,
  /* toComment */toComment,
  /* isCdf */isCdf,
  /* isFloat */isFloat,
  /* isBinary */isBinary,
  /* isPercentage */isPercentage,
  /* isComment */isComment,
  /* toTypeName */toTypeName
];

function make$2(time, measurement) {
  return /* record */[
          /* measurement */measurement,
          /* time */time
        ];
}

var TypedMeasurementWithTime = /* module */[/* make */make$2];

var MeasurementWithTime = /* module */[];

function concatSome(optionals) {
  return optionals.filter(Option$Rationale.isSome).map((function (param) {
                return Option$Rationale.toExn("Warning: This should not have happened", param);
              }));
}

function defaultEmpty(o) {
  if (o !== undefined) {
    return o;
  } else {
    return /* array */[];
  }
}

var foo = /* array */[/* `Float */[
    365180284,
    3.0
  ]];

var typee = Option$Rationale.map(toTypeName, Belt_Array.get(foo, 0));

var mainType;

if (typee !== undefined && typee === 0) {
  var __x = concatSome(Belt_Array.map(foo, toCdf));
  mainType = /* `Cdf */[
    3354245,
    Belt_Array.map(__x, (function (r) {
            return /* record */[
                    /* measurement */r,
                    /* time */32
                  ];
          }))
  ];
} else {
  mainType = undefined;
}

function make$3(t) {
  return t;
}

var ValidScoringCombination = /* module */[/* make */make$3];

function toValidScoringCombination(param) {
  var sampleCount = param[/* sampleCount */3];
  var resolution = param[/* resolution */2];
  var marketPrediction = param[/* marketPrediction */1];
  var agentPrediction = param[/* agentPrediction */0];
  if (param[/* marketScoreType */4]) {
    if (typeof agentPrediction === "number") {
      return undefined;
    } else {
      var variant = agentPrediction[0];
      if (variant !== -488794310) {
        if (variant !== 3354245 || marketPrediction !== undefined || typeof resolution === "number") {
          return undefined;
        } else {
          var variant$1 = resolution[0];
          var agentPrediction$1 = agentPrediction[1];
          if (variant$1 !== 3354245) {
            if (variant$1 !== 365180284) {
              return undefined;
            } else {
              return /* `NonMarketCdfFloat */[
                      -266870688,
                      /* record */[
                        /* agentPrediction */agentPrediction$1,
                        /* resolution */resolution[1]
                      ]
                    ];
            }
          } else if (sampleCount !== undefined) {
            return /* `NonMarketCdfCdf */[
                    934123625,
                    /* record */[
                      /* agentPrediction */agentPrediction$1,
                      /* resolution */resolution[1],
                      /* sampleCount */sampleCount
                    ]
                  ];
          } else {
            return undefined;
          }
        }
      } else if (marketPrediction !== undefined || typeof resolution === "number" || resolution[0] !== -488794310) {
        return undefined;
      } else {
        return /* `NonMarketPercentagePercentage */[
                603488253,
                /* record */[
                  /* agentPrediction */agentPrediction[1],
                  /* resolution */resolution[1]
                ]
              ];
      }
    }
  } else if (typeof agentPrediction === "number") {
    return undefined;
  } else {
    var variant$2 = agentPrediction[0];
    if (variant$2 !== -488794310) {
      if (variant$2 !== 3354245 || marketPrediction === undefined) {
        return undefined;
      } else {
        var match = marketPrediction;
        if (typeof match === "number" || match[0] !== 3354245 || typeof resolution === "number") {
          return undefined;
        } else {
          var variant$3 = resolution[0];
          var marketPrediction$1 = match[1];
          var agentPrediction$2 = agentPrediction[1];
          if (variant$3 !== 3354245) {
            if (variant$3 !== 365180284) {
              return undefined;
            } else {
              return /* `MarketCdfFloat */[
                      667773619,
                      /* record */[
                        /* agentPrediction */agentPrediction$2,
                        /* marketPrediction */marketPrediction$1,
                        /* resolution */resolution[1]
                      ]
                    ];
            }
          } else if (sampleCount !== undefined) {
            return /* `MarketCdfCdf */[
                    -249178116,
                    /* record */[
                      /* agentPrediction */agentPrediction$2,
                      /* marketPrediction */marketPrediction$1,
                      /* resolution */resolution[1],
                      /* sampleCount */sampleCount
                    ]
                  ];
          } else {
            return undefined;
          }
        }
      }
    } else if (marketPrediction !== undefined) {
      var match$1 = marketPrediction;
      if (typeof match$1 === "number" || match$1[0] !== -488794310 || typeof resolution === "number" || resolution[0] !== -488794310) {
        return undefined;
      } else {
        return /* `MarketPercentagePercentage */[
                -130172208,
                /* record */[
                  /* agentPrediction */agentPrediction[1],
                  /* marketPrediction */match$1[1],
                  /* resolution */resolution[1]
                ]
              ];
      }
    } else {
      return undefined;
    }
  }
}

var ScoringCombination = /* module */[/* toValidScoringCombination */toValidScoringCombination];

function make$4(t) {
  return t;
}

var ValidScoringCombinationGroupOverTime = /* module */[/* make */make$4];

exports.UnresolvableResolution = UnresolvableResolution;
exports.$$Comment = $$Comment;
exports.Cdf = Cdf;
exports.Percentage = Percentage;
exports.Measurement = Measurement;
exports.TypedMeasurementWithTime = TypedMeasurementWithTime;
exports.MeasurementWithTime = MeasurementWithTime;
exports.concatSome = concatSome;
exports.defaultEmpty = defaultEmpty;
exports.foo = foo;
exports.typee = typee;
exports.mainType = mainType;
exports.ValidScoringCombination = ValidScoringCombination;
exports.ScoringCombination = ScoringCombination;
exports.ValidScoringCombinationGroupOverTime = ValidScoringCombinationGroupOverTime;
/* typee Not a pure module */
