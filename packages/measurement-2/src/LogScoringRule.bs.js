// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Types$Measurement = require("./Types.bs.js");

function logError(prim) {
  return Math.log2(prim);
}

function marketCdfCdf(param) {
  return /* Ok */Block.__(0, [3.0]);
}

function marketCdfFloat(param) {
  return /* Ok */Block.__(0, [3.0]);
}

function marketPercentagePercentage(param) {
  var resolution = param[/* resolution */2];
  var market = param[/* market */1];
  var prediction = param[/* prediction */0];
  var positive = resolution * Math.log2(prediction / market);
  var negative = Types$Measurement.Percentage[/* inverse */0](resolution) * Math.log2(Types$Measurement.Percentage[/* inverse */0](prediction) / Types$Measurement.Percentage[/* inverse */0](market));
  return /* Ok */Block.__(0, [positive + negative]);
}

function nonMarketCdfCdf(param) {
  return /* Ok */Block.__(0, [3.0]);
}

function nonMarketCdfFloat(param) {
  return /* Ok */Block.__(0, [3.0]);
}

function nonMarketPercentagePercentage(param) {
  var resolution = param[/* resolution */1];
  var prediction = param[/* prediction */0];
  var positive = resolution * Math.log2(prediction / resolution);
  var negative = Types$Measurement.Percentage[/* inverse */0](resolution) * Math.log2(Types$Measurement.Percentage[/* inverse */0](prediction) / Types$Measurement.Percentage[/* inverse */0](resolution));
  return /* Ok */Block.__(0, [positive + negative]);
}

exports.logError = logError;
exports.marketCdfCdf = marketCdfCdf;
exports.marketCdfFloat = marketCdfFloat;
exports.marketPercentagePercentage = marketPercentagePercentage;
exports.nonMarketCdfCdf = nonMarketCdfCdf;
exports.nonMarketCdfFloat = nonMarketCdfFloat;
exports.nonMarketPercentagePercentage = nonMarketPercentagePercentage;
/* Types-Measurement Not a pure module */
