// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE
'use strict';

var Js_exn = require("bs-platform/lib/js/js_exn.js");

function fromString(e) {
  switch (e) {
    case "AMBIGUOUS" : 
        return /* AMBIGUOUS */-974356372;
    case "FALSE_CONDITIONAL" : 
        return /* FALSE_CONDITIONAL */606665514;
    case "OTHER" : 
        return /* OTHER */879009456;
    case "RESULT_NOT_AVAILABLE" : 
        return /* RESULT_NOT_AVAILABLE */-8423941;
    default:
      return Js_exn.raiseError("Invalid GraphQL Unresolvable Resolution: " + e);
  }
}

function toString(e) {
  if (e >= 606665514) {
    if (e >= 879009456) {
      return "OTHER";
    } else {
      return "FALSE_CONDITIONAL";
    }
  } else if (e >= -8423941) {
    return "RESULT_NOT_AVAILABLE";
  } else {
    return "AMBIGUOUS";
  }
}

function toPublicString(e) {
  if (e >= 606665514) {
    if (e >= 879009456) {
      return "Other";
    } else {
      return "False Conditional";
    }
  } else if (e >= -8423941) {
    return "Result Not Available";
  } else {
    return "Ambiguous";
  }
}

var UnresolvableResolution = /* module */[
  /* fromString */fromString,
  /* toString */toString,
  /* toPublicString */toPublicString
];

exports.UnresolvableResolution = UnresolvableResolution;
/* No side effect */
