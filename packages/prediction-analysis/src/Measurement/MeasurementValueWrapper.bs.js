// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Caml_option = require("bs-platform/lib/js/caml_option.js");

function toTypeName(param) {
  var variant = param[0];
  if (variant >= -488794310) {
    if (variant >= 365180284) {
      if (variant >= 564146209) {
        return /* Binary */564146209;
      } else {
        return /* Float */365180284;
      }
    } else if (variant >= 3354245) {
      return /* Cdf */3354245;
    } else {
      return /* Percentage */-488794310;
    }
  } else if (variant >= -826170817) {
    return /* Comment */-826170817;
  } else {
    return /* UnresolvableResolution */-882782856;
  }
}

function toCdf(t) {
  if (typeof t === "number" || t[0] !== 3354245) {
    return undefined;
  } else {
    return Caml_option.some(t[1]);
  }
}

function toFloat(t) {
  if (typeof t === "number" || t[0] !== 365180284) {
    return undefined;
  } else {
    return Caml_option.some(t[1]);
  }
}

function toBinary(t) {
  if (typeof t === "number" || t[0] !== 564146209) {
    return undefined;
  } else {
    return Caml_option.some(t[1]);
  }
}

function toPercentage(t) {
  if (typeof t === "number" || t[0] !== -488794310) {
    return undefined;
  } else {
    return Caml_option.some(t[1]);
  }
}

function toUnresolvable(t) {
  if (typeof t === "number" || t[0] !== -882782856) {
    return undefined;
  } else {
    return Caml_option.some(t[1]);
  }
}

function toComment(t) {
  if (typeof t === "number" || t[0] !== -826170817) {
    return undefined;
  } else {
    return Caml_option.some(t[1]);
  }
}

function isCdf(t) {
  return toTypeName(t) === /* Cdf */3354245;
}

function isFloat(t) {
  return toTypeName(t) === /* Float */365180284;
}

function isBinary(t) {
  return toTypeName(t) === /* Binary */564146209;
}

function isPercentage(t) {
  return toTypeName(t) === /* Percentage */-488794310;
}

function isUnresolvable(t) {
  return toTypeName(t) === /* UnresolvableResolution */-882782856;
}

function isComment(t) {
  return toTypeName(t) === /* Comment */-826170817;
}

function toWrapperFn(t) {
  if (t >= -488794310) {
    if (t >= 365180284) {
      if (t >= 564146209) {
        return (function (r) {
            return /* `Binary */[
                    564146209,
                    r
                  ];
          });
      } else {
        return (function (r) {
            return /* `Float */[
                    365180284,
                    r
                  ];
          });
      }
    } else if (t >= 3354245) {
      return (function (r) {
          return /* `Cdf */[
                  3354245,
                  r
                ];
        });
    } else {
      return (function (r) {
          return /* `Percentage */[
                  -488794310,
                  r
                ];
        });
    }
  } else if (t >= -826170817) {
    return (function (r) {
        return /* `Comment */[
                -826170817,
                r
              ];
      });
  } else {
    return (function (r) {
        return /* `UnresolvableResolution */[
                -882782856,
                r
              ];
      });
  }
}

function toIsFn(t) {
  if (t >= -488794310) {
    if (t >= 365180284) {
      if (t >= 564146209) {
        return isBinary;
      } else {
        return isFloat;
      }
    } else if (t >= 3354245) {
      return isCdf;
    } else {
      return isPercentage;
    }
  } else if (t >= -826170817) {
    return isComment;
  } else {
    return isUnresolvable;
  }
}

function toString(param) {
  if (param >= -488794310) {
    if (param >= 365180284) {
      if (param >= 564146209) {
        return "binary";
      } else {
        return "floatPoint";
      }
    } else if (param >= 3354245) {
      return "floatCdf";
    } else {
      return "percentage";
    }
  } else if (param >= -826170817) {
    return "comment";
  } else {
    return "unresolvableResolution";
  }
}

function fromString(str) {
  switch (str) {
    case "binary" : 
        return /* Ok */Block.__(0, [/* Binary */564146209]);
    case "comment" : 
        return /* Ok */Block.__(0, [/* Comment */-826170817]);
    case "floatCdf" : 
        return /* Ok */Block.__(0, [/* Cdf */3354245]);
    case "floatPoint" : 
        return /* Ok */Block.__(0, [/* Float */365180284]);
    case "percentage" : 
        return /* Ok */Block.__(0, [/* Percentage */-488794310]);
    case "unresolvableResolution" : 
        return /* Ok */Block.__(0, [/* UnresolvableResolution */-882782856]);
    default:
      return /* Error */Block.__(1, ["Measurement datatype value not valid: " + str]);
  }
}

var T = [
  toTypeName,
  toCdf,
  toFloat,
  toBinary,
  toPercentage,
  toUnresolvable,
  toComment
];

var Name = [
  fromString,
  toString,
  toIsFn,
  toWrapperFn
];

exports.T = T;
exports.Name = Name;
/* No side effect */
