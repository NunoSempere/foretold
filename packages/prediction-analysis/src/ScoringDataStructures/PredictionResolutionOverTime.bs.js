// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE
'use strict';

var $$Array = require("bs-platform/lib/js/array.js");
var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Belt_Result = require("bs-platform/lib/js/belt_Result.js");
var Caml_option = require("bs-platform/lib/js/caml_option.js");
var Option$Rationale = require("rationale/src/Option.js");
var Percentage$PredictionAnalysis = require("../Measurement/Percentage.bs.js");
var StartAtDistribution$PredictionAnalysis = require("../Utility/StartAtDistribution.bs.js");
var MeasurementValueCollectionFunctor$PredictionAnalysis = require("../Measurement/MeasurementValueCollectionFunctor.bs.js");

function make(time, measurementValue) {
  return /* record */[
          /* time */time,
          /* measurementValue */measurementValue
        ];
}

function toMeasurement(t) {
  return t[/* measurementValue */1];
}

function map(t, fn) {
  return /* record */[
          /* time */t[/* time */0],
          /* measurementValue */Curry._1(fn, t[/* measurementValue */1])
        ];
}

var include = MeasurementValueCollectionFunctor$PredictionAnalysis.Make([
      map,
      toMeasurement
    ]);

var lengthOfIntendedType = include[0];

var Unwrapped = include[1];

function _toStartAtDistribution(r, toMeasurement) {
  var toDistribution = function (m) {
    var finalTime = r[/* resolution */2][/* time */0];
    var ts = m;
    return StartAtDistribution$PredictionAnalysis.make($$Array.map((function (param) {
                      return /* tuple */[
                              param[/* time */0],
                              param[/* measurementValue */1]
                            ];
                    }), ts), finalTime);
  };
  var match = r[/* marketPredictions */1];
  if (match !== undefined) {
    var product = StartAtDistribution$PredictionAnalysis.product(toDistribution(r[/* agentPredictions */0]), toDistribution(match));
    return StartAtDistribution$PredictionAnalysis.map((function (param) {
                  return Curry._1(toMeasurement, /* record */[
                              /* agentPrediction */param[0],
                              /* marketPrediction */Caml_option.some(param[1]),
                              /* resolution */r[/* resolution */2][/* measurementValue */1]
                            ]);
                }), product);
  } else {
    return StartAtDistribution$PredictionAnalysis.map((function (agentPrediction) {
                  return Curry._1(toMeasurement, /* record */[
                              /* agentPrediction */agentPrediction,
                              /* marketPrediction */undefined,
                              /* resolution */r[/* resolution */2][/* measurementValue */1]
                            ]);
                }), toDistribution(r[/* agentPredictions */0]));
  }
}

function toStartAtDistribution(t) {
  var variant = t[0];
  if (variant !== 563749152) {
    if (variant >= 1067596532) {
      return _toStartAtDistribution(t[1], (function (r) {
                    return /* `PercentagePercentage */[
                            1067596532,
                            r
                          ];
                  }));
    } else {
      return _toStartAtDistribution(t[1], (function (r) {
                    return /* `CdfFloat */[
                            348210391,
                            r
                          ];
                  }));
    }
  } else {
    return _toStartAtDistribution(t[1], (function (r) {
                  return /* `CdfCdf */[
                          563749152,
                          r
                        ];
                }));
  }
}

function hasValidPredictionPair(t) {
  var agentPredictions = t[/* agentPredictions */0];
  var hasMoreThanOne = function (typeName) {
    return Curry._2(lengthOfIntendedType, typeName, agentPredictions) > 0;
  };
  var match = t[/* resolution */2][/* measurementValue */1];
  if (typeof match === "number") {
    return false;
  } else {
    var variant = match[0];
    if (variant >= 3354246) {
      if (variant !== 365180284) {
        if (variant !== 564146209 || !hasMoreThanOne(/* Percentage */-488794310)) {
          return false;
        } else {
          return true;
        }
      } else if (hasMoreThanOne(/* Cdf */3354245)) {
        return true;
      } else {
        return false;
      }
    } else if (variant !== -488794310) {
      if (variant >= 3354245 && hasMoreThanOne(/* Cdf */3354245)) {
        return true;
      } else {
        return false;
      }
    } else if (hasMoreThanOne(/* Percentage */-488794310)) {
      return true;
    } else {
      return false;
    }
  }
}

function validateValidPredictionPair(t) {
  var match = hasValidPredictionPair(t);
  if (match) {
    return /* Ok */Block.__(0, [t]);
  } else {
    return /* Error */Block.__(1, ["Prediction pair not valid"]);
  }
}

function _run(param) {
  var resolution = param[/* resolution */2];
  var marketPredictions = param[/* marketPredictions */1];
  var agentPredictions = param[/* agentPredictions */0];
  var convertMarket = function (typeName) {
    return Curry._2(Option$Rationale.bind, marketPredictions, (function (r) {
                  return Option$Rationale.ofResult(Curry._2(Unwrapped[/* fromT */0], typeName, r));
                }));
  };
  var match = resolution[/* measurementValue */1];
  if (typeof match === "number") {
    return /* Error */Block.__(1, ["Grouping not allowed"]);
  } else {
    var variant = match[0];
    if (variant >= 3354246) {
      if (variant !== 365180284) {
        if (variant !== 564146209) {
          return /* Error */Block.__(1, ["Grouping not allowed"]);
        } else {
          var resolution$1 = match[1];
          var match$1 = Curry._2(Unwrapped[/* fromT */0], /* Percentage */-488794310, agentPredictions);
          var match$2 = convertMarket(/* Percentage */-488794310);
          if (match$1.tag) {
            return /* Error */Block.__(1, [match$1[0]]);
          } else {
            var match$3 = match$1[0];
            if (typeof match$3 === "number" || match$3[0] !== -488794310) {
              return /* Error */Block.__(1, ["This should be an impossible error."]);
            } else {
              var agentPredictions$1 = match$3[1];
              if (match$2 !== undefined) {
                var match$4 = match$2;
                if (typeof match$4 === "number" || match$4[0] !== -488794310) {
                  return /* Error */Block.__(1, ["This should be an impossible error."]);
                } else {
                  return /* Ok */Block.__(0, [/* `PercentagePercentage */[
                              1067596532,
                              /* record */[
                                /* agentPredictions */agentPredictions$1,
                                /* marketPredictions */match$4[1],
                                /* resolution : record */[
                                  /* time */resolution[/* time */0],
                                  /* measurementValue */Percentage$PredictionAnalysis.fromBool(resolution$1)
                                ]
                              ]
                            ]]);
                }
              } else {
                return /* Ok */Block.__(0, [/* `PercentagePercentage */[
                            1067596532,
                            /* record */[
                              /* agentPredictions */agentPredictions$1,
                              /* marketPredictions */undefined,
                              /* resolution : record */[
                                /* time */resolution[/* time */0],
                                /* measurementValue */Percentage$PredictionAnalysis.fromBool(resolution$1)
                              ]
                            ]
                          ]]);
              }
            }
          }
        }
      } else {
        var resolution$2 = match[1];
        var match$5 = Curry._2(Unwrapped[/* fromT */0], /* Cdf */3354245, agentPredictions);
        var match$6 = convertMarket(/* Cdf */3354245);
        if (match$5.tag) {
          return /* Error */Block.__(1, [match$5[0]]);
        } else {
          var match$7 = match$5[0];
          if (typeof match$7 === "number" || match$7[0] !== 3354245) {
            return /* Error */Block.__(1, ["This should be an impossible error."]);
          } else {
            var agentPredictions$2 = match$7[1];
            if (match$6 !== undefined) {
              var match$8 = match$6;
              if (typeof match$8 === "number" || match$8[0] !== 3354245) {
                return /* Error */Block.__(1, ["This should be an impossible error."]);
              } else {
                return /* Ok */Block.__(0, [/* `CdfFloat */[
                            348210391,
                            /* record */[
                              /* agentPredictions */agentPredictions$2,
                              /* marketPredictions */match$8[1],
                              /* resolution : record */[
                                /* time */resolution[/* time */0],
                                /* measurementValue */resolution$2
                              ]
                            ]
                          ]]);
              }
            } else {
              return /* Ok */Block.__(0, [/* `CdfFloat */[
                          348210391,
                          /* record */[
                            /* agentPredictions */agentPredictions$2,
                            /* marketPredictions */undefined,
                            /* resolution : record */[
                              /* time */resolution[/* time */0],
                              /* measurementValue */resolution$2
                            ]
                          ]
                        ]]);
            }
          }
        }
      }
    } else if (variant !== -488794310) {
      if (variant >= 3354245) {
        var resolution$3 = match[1];
        var match$9 = Curry._2(Unwrapped[/* fromT */0], /* Cdf */3354245, agentPredictions);
        var match$10 = convertMarket(/* Cdf */3354245);
        if (match$9.tag) {
          return /* Error */Block.__(1, [match$9[0]]);
        } else {
          var match$11 = match$9[0];
          if (typeof match$11 === "number" || match$11[0] !== 3354245) {
            return /* Error */Block.__(1, ["This should be an impossible error."]);
          } else {
            var agentPredictions$3 = match$11[1];
            if (match$10 !== undefined) {
              var match$12 = match$10;
              if (typeof match$12 === "number" || match$12[0] !== 3354245) {
                return /* Error */Block.__(1, ["This should be an impossible error."]);
              } else {
                return /* Ok */Block.__(0, [/* `CdfCdf */[
                            563749152,
                            /* record */[
                              /* agentPredictions */agentPredictions$3,
                              /* marketPredictions */match$12[1],
                              /* resolution : record */[
                                /* time */resolution[/* time */0],
                                /* measurementValue */resolution$3
                              ]
                            ]
                          ]]);
              }
            } else {
              return /* Ok */Block.__(0, [/* `CdfCdf */[
                          563749152,
                          /* record */[
                            /* agentPredictions */agentPredictions$3,
                            /* marketPredictions */undefined,
                            /* resolution : record */[
                              /* time */resolution[/* time */0],
                              /* measurementValue */resolution$3
                            ]
                          ]
                        ]]);
            }
          }
        }
      } else {
        return /* Error */Block.__(1, ["Grouping not allowed"]);
      }
    } else {
      var resolution$4 = match[1];
      var match$13 = Curry._2(Unwrapped[/* fromT */0], /* Percentage */-488794310, agentPredictions);
      var match$14 = convertMarket(/* Percentage */-488794310);
      if (match$13.tag) {
        return /* Error */Block.__(1, [match$13[0]]);
      } else {
        var match$15 = match$13[0];
        if (typeof match$15 === "number" || match$15[0] !== -488794310) {
          return /* Error */Block.__(1, ["This should be an impossible error."]);
        } else {
          var agentPredictions$4 = match$15[1];
          if (match$14 !== undefined) {
            var match$16 = match$14;
            if (typeof match$16 === "number" || match$16[0] !== -488794310) {
              return /* Error */Block.__(1, ["This should be an impossible error."]);
            } else {
              return /* Ok */Block.__(0, [/* `PercentagePercentage */[
                          1067596532,
                          /* record */[
                            /* agentPredictions */agentPredictions$4,
                            /* marketPredictions */match$16[1],
                            /* resolution : record */[
                              /* time */resolution[/* time */0],
                              /* measurementValue */resolution$4
                            ]
                          ]
                        ]]);
            }
          } else {
            return /* Ok */Block.__(0, [/* `PercentagePercentage */[
                        1067596532,
                        /* record */[
                          /* agentPredictions */agentPredictions$4,
                          /* marketPredictions */undefined,
                          /* resolution : record */[
                            /* time */resolution[/* time */0],
                            /* measurementValue */resolution$4
                          ]
                        ]
                      ]]);
          }
        }
      }
    }
  }
}

function run(agentPredictions, $staropt$star, resolution) {
  var marketPredictions = $staropt$star !== undefined ? Caml_option.valFromOption($staropt$star) : undefined;
  var input = /* record */[
    /* agentPredictions */agentPredictions,
    /* marketPredictions */marketPredictions,
    /* resolution */resolution
  ];
  var __x = validateValidPredictionPair(input);
  return Belt_Result.flatMap(__x, _run);
}

var MeasurementWithTime_000 = [];

var MeasurementWithTime = [
  MeasurementWithTime_000,
  make
];

var fromMeasurementCombination = run;

exports.MeasurementWithTime = MeasurementWithTime;
exports.toStartAtDistribution = toStartAtDistribution;
exports.fromMeasurementCombination = fromMeasurementCombination;
/* include Not a pure module */
