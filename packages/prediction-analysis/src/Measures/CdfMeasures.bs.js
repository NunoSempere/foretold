// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var Function$Rationale = require("rationale/src/Function.js");
var Cdf$PredictionAnalysis = require("../Measurement/Cdf.bs.js");
var LogError$PredictionAnalysis = require("../MeasureStrategies/LogError.bs.js");
var Distribution$PredictionAnalysis = require("../Measurement/Distribution.bs.js");

function findX(x) {
  var partial_arg = Curry._1(Distribution$PredictionAnalysis.T[/* findX */2], x);
  return (function (param) {
      return Function$Rationale.$pipe$pipe$great(Cdf$PredictionAnalysis.toDistribution, partial_arg, param);
    });
}

function findY(y) {
  var partial_arg = Curry._1(Distribution$PredictionAnalysis.T[/* findY */3], y);
  return (function (param) {
      return Function$Rationale.$pipe$pipe$great(Cdf$PredictionAnalysis.toDistribution, partial_arg, param);
    });
}

var partial_arg = Distribution$PredictionAnalysis.T[/* integral */6];

function integral(param) {
  return Function$Rationale.$pipe$pipe$great(Cdf$PredictionAnalysis.toDistribution, partial_arg, param);
}

function differentialEntropy(t) {
  return LogError$PredictionAnalysis.differentialEntropy(10000, /* `Cdf */[
              3354245,
              t
            ]);
}

exports.findX = findX;
exports.findY = findY;
exports.integral = integral;
exports.differentialEntropy = differentialEntropy;
/* Cdf-PredictionAnalysis Not a pure module */
