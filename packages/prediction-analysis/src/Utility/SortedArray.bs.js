// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var $$Array = require("bs-platform/lib/js/array.js");
var Caml_obj = require("bs-platform/lib/js/caml_obj.js");
var Belt_Array = require("bs-platform/lib/js/belt_Array.js");
var Belt_SortArray = require("bs-platform/lib/js/belt_SortArray.js");

function make(t) {
  var match = Belt_SortArray.isSorted(t, Caml_obj.caml_compare);
  if (match) {
    return t;
  }
  
}

function concat(a, b) {
  var a$1 = Belt_Array.concat(a, b);
  var a$2 = Belt_SortArray.stableSortBy(a$1, Caml_obj.caml_compare);
  return $$Array.of_list(List.sort_uniq(Caml_obj.caml_compare, $$Array.to_list(a$2)));
}

function filterOutLessThan(lowestAllowedValue, t) {
  return Belt_Array.keep(t, (function (x) {
                return Caml_obj.caml_greaterequal(x, lowestAllowedValue);
              }));
}

function filterOutGreaterThan(highestAllowedValue, t) {
  return Belt_Array.keep(t, (function (x) {
                return Caml_obj.caml_greaterequal(x, highestAllowedValue);
              }));
}

function min(__x) {
  return Belt_Array.get(__x, 0);
}

function max(t) {
  return Belt_Array.get(t, t.length - 1 | 0);
}

exports.make = make;
exports.concat = concat;
exports.min = min;
exports.max = max;
exports.filterOutLessThan = filterOutLessThan;
exports.filterOutGreaterThan = filterOutGreaterThan;
/* No side effect */
